"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateMetaDescription = void 0;
var getDataByPath_1 = __importDefault(require("payload/dist/admin/components/forms/Form/getDataByPath"));
var stringifyRichText_1 = require("./stringifyRichText");
var generateMetaDescription = function (fields) {
    var excerpt = fields.excerpt.value;
    var description = excerpt || '';
    if (!excerpt) {
        var firstBlock = (0, getDataByPath_1.default)(fields, 'layout.0');
        if (firstBlock) {
            // instead of writing a custom block for every type, we'll just iterate threw some generic keys and write a block each of those
            var commonKeys = [
                'introContent',
                'richText',
                'columns',
            ];
            var blockKeys_1 = Object.keys(firstBlock);
            var matchingKeys = commonKeys.filter(function (commonKey) { return blockKeys_1.includes(commonKey); });
            if (matchingKeys.length > -1) {
                var keyToUse = matchingKeys[0];
                var field = firstBlock === null || firstBlock === void 0 ? void 0 : firstBlock[keyToUse];
                if (field) {
                    if (keyToUse === 'introContent') {
                        var introContent = (0, stringifyRichText_1.stringifyRichText)(field);
                        if (!description && introContent)
                            description = introContent;
                    }
                    if (keyToUse === 'richText') {
                        var richText = (0, stringifyRichText_1.stringifyRichText)(field);
                        if (!description && richText)
                            description = richText;
                    }
                    if (keyToUse === 'columns') {
                        var firstColumn = field[0];
                        if (firstColumn) {
                            var richText = firstColumn.richText;
                            var richTextToUse = richText;
                            if (typeof richText === 'string') {
                                richTextToUse = JSON.parse(richText);
                            }
                            var columnText = (0, stringifyRichText_1.stringifyRichText)(richTextToUse);
                            if (!description && columnText)
                                description = columnText;
                        }
                    }
                }
            }
        }
    }
    return description;
};
exports.generateMetaDescription = generateMetaDescription;
//# sourceMappingURL=generateMetaDescription.js.map