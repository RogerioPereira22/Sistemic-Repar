"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPaymentTotal = void 0;
var Forms_1 = require("./collections/Forms");
var FormSubmissions_1 = require("./collections/FormSubmissions");
// import path from 'path';
var getPaymentTotal_1 = require("./utilities/getPaymentTotal");
Object.defineProperty(exports, "getPaymentTotal", { enumerable: true, get: function () { return getPaymentTotal_1.getPaymentTotal; } });
var FormBuilder = function (incomingFormConfig) { return function (config) {
    var formConfig = __assign(__assign({}, incomingFormConfig), { fields: __assign({ text: true, textarea: true, select: true, email: true, state: true, country: true, number: true, checkbox: true, message: true, payment: false }, incomingFormConfig.fields) });
    return __assign(__assign({}, config), { 
        // admin: {
        //   ...config.admin,
        //   webpack: (webpackConfig) => ({
        //     ...webpackConfig,
        //     resolve: {
        //       ...webpackConfig.resolve,
        //       alias: {
        //         ...webpackConfig.resolve.alias,
        //         [path.resolve(__dirname, 'collections/FormSubmissions/hooks/sendEmail.ts')]: path.resolve(__dirname, 'mocks/serverModule.js'),
        //         [path.resolve(__dirname, 'collections/FormSubmissions/hooks/createCharge.ts')]: path.resolve(__dirname, 'mocks/serverModule.js'),
        //       },
        //     },
        //   })
        // },
        collections: __spreadArray(__spreadArray([], (config === null || config === void 0 ? void 0 : config.collections) || [], true), [
            (0, Forms_1.generateFormCollection)(formConfig),
            (0, FormSubmissions_1.generateSubmissionCollection)(formConfig),
        ], false) });
}; };
exports.default = FormBuilder;
//# sourceMappingURL=index.js.map