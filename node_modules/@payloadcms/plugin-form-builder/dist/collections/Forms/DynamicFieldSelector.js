"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DynamicFieldSelector = void 0;
var react_1 = __importStar(require("react"));
var forms_1 = require("payload/components/forms");
var DynamicFieldSelector = function (props) {
    var _a = (0, forms_1.useForm)(), fields = _a.fields, getDataByPath = _a.getDataByPath;
    var _b = (0, react_1.useState)([]), options = _b[0], setOptions = _b[1];
    (0, react_1.useEffect)(function () {
        // @ts-ignore
        var fields = getDataByPath('fields');
        if (fields) {
            var allNonPaymentFields = fields.map(function (block) {
                var name = block.name, label = block.label, blockType = block.blockType;
                if (blockType !== 'payment') {
                    return ({
                        label: label,
                        value: name
                    });
                }
                return null;
            }).filter(Boolean);
            setOptions(allNonPaymentFields);
        }
    }, [
        fields,
        getDataByPath
    ]);
    return (react_1.default.createElement(forms_1.Select, __assign({}, props, { options: options })));
};
exports.DynamicFieldSelector = DynamicFieldSelector;
//# sourceMappingURL=DynamicFieldSelector.js.map