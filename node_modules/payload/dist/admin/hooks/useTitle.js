"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_i18next_1 = require("react-i18next");
const useRelatedCollections_1 = require("../components/forms/field-types/Relationship/AddNew/useRelatedCollections");
const context_1 = require("../components/forms/Form/context");
const Config_1 = require("../components/utilities/Config");
const formatDate_1 = require("../utilities/formatDate");
const useTitle = (useAsTitle, collection) => {
    var _a, _b, _c, _d;
    const titleField = (0, context_1.useFormFields)(([fields]) => fields[useAsTitle]);
    const value = (titleField === null || titleField === void 0 ? void 0 : titleField.value) || '';
    const { admin: { dateFormat: dateFormatFromConfig } } = (0, Config_1.useConfig)();
    const collectionConfig = (_a = (0, useRelatedCollections_1.useRelatedCollections)(collection)) === null || _a === void 0 ? void 0 : _a[0];
    const fieldConfig = (_b = collectionConfig === null || collectionConfig === void 0 ? void 0 : collectionConfig.fields) === null || _b === void 0 ? void 0 : _b.find((field) => 'name' in field && (field === null || field === void 0 ? void 0 : field.name) === useAsTitle);
    const { i18n } = (0, react_i18next_1.useTranslation)();
    const isDate = (fieldConfig === null || fieldConfig === void 0 ? void 0 : fieldConfig.type) === 'date';
    let title = value;
    if (isDate && value) {
        const dateFormat = ((_d = (_c = fieldConfig === null || fieldConfig === void 0 ? void 0 : fieldConfig.admin) === null || _c === void 0 ? void 0 : _c.date) === null || _d === void 0 ? void 0 : _d.displayFormat) || dateFormatFromConfig;
        title = (0, formatDate_1.formatDate)(value, dateFormat, i18n === null || i18n === void 0 ? void 0 : i18n.language);
    }
    return title;
};
exports.default = useTitle;
//# sourceMappingURL=useTitle.js.map