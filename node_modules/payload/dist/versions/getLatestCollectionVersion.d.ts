import { Payload } from '../payload';
import { CollectionModel, SanitizedCollectionConfig, TypeWithID } from '../collections/config/types';
import { GlobalModel, SanitizedGlobalConfig } from '../globals/config/types';
type Args = {
    payload: Payload;
    query: Record<string, unknown>;
    lean?: boolean;
} & ({
    entityType: 'global';
    id?: never;
    Model: GlobalModel;
    config: SanitizedGlobalConfig;
} | {
    entityType?: 'collection';
    id: string | number;
    Model: CollectionModel;
    config: SanitizedCollectionConfig;
});
export declare const getLatestEntityVersion: <T extends TypeWithID = any>({ payload, entityType, config, Model, query, id, lean, }: Args) => Promise<T>;
export {};
